{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d5e92a8b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === \"light\"?\"dark\":\"light\"} `}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmfor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here'\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        console.log('Button Clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        console.log('Button Clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        console.log('Button Clicked' + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n    const handleCopy = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        console.log('On Change')\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    //setText('new text');\r\nreturn (\r\n    <>\r\n    <div className='container' style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n        <h2 className='mb-3'>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === \"dark\"?\"#13466e\":\"white\", color: props.mode === \"light\"?\"black\":\"white\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'45px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\n//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n    }\n\n  const toggleMode = () =>{\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark theme has been enabled\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light theme has been enabled\", \"success\");\n    }\n  }\n  return (\n    <div>\n      {/* <BrowserRouter> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Routes>\n              <Route path=\"/\"\n                element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"  mode={mode}/>}\n              />\n              <Route path=\"/about\" element={<About mode={mode}/>}/>\n          </Routes> */}\n          <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Charater Counter\"  mode={mode}/>\n        </div>\n      {/* </BrowserRouter> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}