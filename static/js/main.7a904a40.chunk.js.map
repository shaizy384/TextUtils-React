{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","defaultProps","title","About","mystyle","aria-labelledby","data-bs-parent","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","react_router_dist","exact","path","components_About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7a904a40.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"} `}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmfor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here'\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log('Button Clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        console.log('Button Clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        console.log('Button Clicked' + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log('On Change')\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>\r\n                <h2 className='mb-3'>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\", color: props.mode === \"light\" ? \"black\" : \"white\" }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction About(props) {\r\n  // const [mystyle, setMystyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\"\r\n  // })\r\n  let mystyle = {\r\n    color: props.mode === 'dark'?'white':'black',\r\n    backgroundColor: props.mode === 'dark'?'rgb(36, 74, 104)':'white'\r\n  }\r\n\r\n  return (\r\n    <div className='container' style={{color: props.mode === 'dark'?'white':'black'}}>\r\n      <h1 className='my-3'>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              <strong>Analyze Your Text</strong>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"  style={mystyle}>\r\n              TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count, charater count or\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"  style={mystyle}>\r\n              TextUtils is a free charater count tool that proides instant charater count & word count statistis for a given text. TextUtils reports the number of words and charaters. Thus it is suitable for writing tet with word/ charater limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"  style={mystyle}>\r\n              This word counter software works in any web browser suh as Chrome, Firefox, Inernet Explorer, Safari, Opera. It suits to count charaters in facebook, blog, excel ducoments, pdf ducoment, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'45px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport About from './components/About';\r\nimport { useState } from 'react';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark theme has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light theme has been enabled\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          <Routes>\r\n            <Route exact path=\"/\"\r\n              element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Charater Counter\" mode={mode} />}\r\n            />\r\n            <Route exact path=\"/TextUtils-React\"\r\n              element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Charater Counter\" mode={mode} />}\r\n            />\r\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\r\n          </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}